# Spring application name
spring.application.name=transaction-service

# Server Configuration
server.port=8084

# Database Configuration (use environment variables for sensitive data)
spring.datasource.url=jdbc:postgresql://<db-host>:5432/expentrack_transaction_db
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate configuration (avoid automatic schema changes in production)
spring.jpa.hibernate.ddl-auto=none  # Use 'none' or 'validate' in production
spring.jpa.show-sql=false  # Disable SQL logging in production
spring.jpa.properties.hibernate.format_sql=false  # Disable SQL formatting

# Eureka client configuration (use actual Eureka server URL)
eureka.client.serviceUrl.defaultZone=http://<eureka-server-url>:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Root log level (set to INFO for production)
logging.level.root=INFO

# Spring Framework log level (set to ERROR or WARN for production)
logging.level.org.springframework=ERROR

# Specify log file name (use production-specific naming)
logging.file.name=transaction-service-${spring.profiles.active}-${date:yyyy-MM-dd}.log

# Specify the log directory (ensure this path is correct for your production environment)
logging.file.path=/var/log/transaction-service/

# Log file rolling configuration
logging.file.max-size=10MB  # Rotate log file after it reaches 10MB
logging.file.max-history=30  # Keep logs for 30 days

# Logging pattern for better readability in production
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %5p [%t] --- %logger{36} : %m%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %5p [%t] --- %logger{36} : %m%n

# Enable console logging (optional in production, can be set to false if not needed)
logging.console.enabled=false  # Disable console logging in production to reduce overhead